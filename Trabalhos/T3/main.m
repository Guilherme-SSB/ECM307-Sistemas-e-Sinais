%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%  @author Guilherme Samuel de Souza Barbosa  RA.: 19.00012-0%%  @author Renan Scheidt Reschke  RA.: 19.02009-0%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% 0 - Proposta do T3 - dupla - entrega 27/05 até 24h00.%% %%  a. Para a vogal /a/ determinar a função de laplace --> G(s) = N(s)/D(s). (2.0 pontos)%%  b. Plot sobreposto da vogal com a resposta de Laplace. (2.0 pontos)%%  c. Qual a relação entre Laplace(polos) e Fourier? (1.0 ponto)%%  d. s = sigma + j w --> G(s) --> visualizar o gráfico do ponto de vista de w. %%     Comparando com Fourier qual a conslusão? (1.0 ponto)%%  e. Gerar uma vogal artificial (sintese de voz) de 2 segundos - o mais realista possível (1.0 ponto).%%  f. Um método automático para determinar o G(s). (2,0 pontos)%%  g. Um circuito elétrico equivalente a vogal. (1.0 ponto)%% %%  14/05/2021 - versão 1.0 - VCP%% %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% 1 - Preparação do código %% %% Boas práticas: limpeza de variáveis; variáveis globais%% Constantes; carregar bibliotecas;...%%%%% Limpezaclc;          % limpa visual da tela de comandosclose all;    % limpa as figurasclear all;    % limpa as variáveis%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% a - Para a vogal /a/ determinar a função de laplace --> %%     G(s) = N(s)/D(s). (2.0 pontos) %% %%   Variáveis:  t          -  tempo de 0 a 100ms%%               Vp         -  série temporal referente a vogal%%               Y0         -  Fourier superior (w > 0) - 0 --> fs/2%%               frequencia -  Frequência - 0 --> fs/2%%               time0      -  variável auxiliar%%%%load Voz.mat                        % carregar os dados para análise% Visualizando e analisando o sinal no domínio temporalfigure(1)findpeaks(diff(Vp),t(1:end-1),'MinPeakDistance',0.001,'MinPeakDistance',0.005);[vt, ip] = findpeaks(diff(Vp),t(1:end-1),'MinPeakDistance',0.001,'MinPeakDistance',0.005);xlabel('Tempo [s]')ylabel('Tensão [V]')title('Sinal original da vogal /a/')grid ti = ip(1);     % tempo da primeira oscilação inteiratf = ip(14);    % tempo da ultima oscila inteiraT  = (tf-ti)/13;    % valor médio entre as oscilaçõesf  = 1/T;           % frequência% Visualizando e analisando os dados no domínio das frequênciasfigure(2)findpeaks(Y0,frequencia,'MinPeakDistance',0.9*f);title('Espectro de amplitude da vogal /a/');xlabel('Frequência [Hz]');ylabel('Magnitude [dB]'); grid %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% a.1 Resposta de um sistema de segunda ordem %% %%  N(s) = a%%  D(s) = s^2 + bs + c%%% Visualizando e analisando uma oscilação do sinal originalt1 = find(t==ip(5));t2 = find(t==ip(6));X = t(t1:t2) - t(t1);Y = Vp(t1:t2);figure(3)plot(t(t1:t2), Vp(t1:t2))%findpeaks(Y, X, 'MinPeakDistance', 0.001);[v_exp,t_exp] = findpeaks(Y, X, 'MinPeakDistance', 0.001);xlabel('Tempo [s]')ylabel('Tensão [V]')title('Uma oscilação do sinal original')grid% Aproximando os picos dessa oscilação por uma função exponencial f_exp = fit(t_exp(1:3)', v_exp(1:3), 'exp1');%f = %     General model Exp1:%     f(x) = a*exp(b*x)%     Coefficients (with 95% confidence bounds):%       a =       2.446  (2.018, 2.874)%       b =      -434.4  (-593.4, -275.3)% Visualizando a aproximaçãofigure(4)plot(f_exp, t_exp(1:3)', v_exp(1:3))xlabel('Tempo [s]')ylabel('Tensão [V]')title('Aproximação da oscilação por uma exponencial')legend('Sinal original', 'Aproximação')grid%%% Porém, sabe-se, pela análise de Laplace, que o sinal não se aproximará%%% de apenas uma função exponencial, e sim de uma exponencial amortecida%%% por uma senóide.% x(1) = valor médio = nulo (senóide)% x(2) = amplitude (dada pela aproximação pela exponencial)% x(3) = expoente da exponencial% x(4) = frequência (dada pela primeira formante de Fourier)x = [0 2.446, -434.4, 670]';Y_novo =  x(1) + x(2).*exp(x(3).*X).*sin(2*pi*x(4).*X);% Visualizando a aproximação completafigure(5)plot(X, Y, '+r', X, Y_novo, 'b')title('Sinal de voz para a vogal a');xlabel('Tempo [s]');ylabel('Tensão [V]'); grid legend('Real','Ajustado')% Criando a função de transferência a partir dos zeros, dos polos e do% ganho do sistema% O sistema não possui zeros pois teremos um polinômio de grau 0 no% numerador da função de transferênciaz = [];% Nota-se que os polos são compostos pelas frequência da primeira% formante, em Hz, somado ao expoente da exponencial da aproximação.% Portanto, percebe-se uma relação entre Fourier e Laplace.p1 = x(3) + 1i*2*pi*x(4);p2 = x(3) - 1i*2*pi*x(4);% Nota-se, também, que o ganho do sistema é dado pelo produto da amplitude% proporcionada pela aproximação por uma função exponencial pela, mais um% vez, frequência da primeira formante, em Hz, dada por Fourier.k  = x(2)*2*pi*x(4);clear('tf')Gs = zpk(z,[p1 p2],k);%Gs = %           13077%  -----------------------%  s^2 + 1150 s + 2.137e07% Aplicando um impulso na função de transferênciafigure(6)impulse(Gs);grid%%% Modelando, dessa forma, a função de transferência para uma oscilação do%%% sinal original, obtemos:%%% N(s) = 13077%%% D(s) = s^2 + 1150*s + 2.137e07%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% b. Plot sobreposto da vogal com a resposta de Laplace. (2.0 pontos) %% %%  %%%%  [serie, tempo, ~] = impulse(Gs);serie = serie(1:50);resposta_laplace = repmat(serie, 14);figure(7)plot(t(1:700), resposta_laplace, 'linewidth', 2)holdplot(t(1:700), Vp(1:700), 'linewidth', 1)xlabel('Tempo [s]')ylabel('Tensão [V]')title('Plot sobreposto da vogal com a resposta de Laplace')legend('Sinal original', 'Resposta de Laplace')grid%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% c. Qual a relação entre Laplace(polos) e Fourier? (1.0 ponto)%%%% %%%%  a = 13077;      % Valor encontrado no item a)b = 1150;       % Valor encontrado no item a)c = 2.137e7;    % Valor encontrado no item a)N = a;D = [1 b c];% Criação da função de transferênciaclear('tf')Gs = tf(N, D);  %%% Para comparar com Fourier, faz-se s = j*w, ou seja, sigma = 0. Dessa%%% forma, é possível analisar apenas o comportamento em frequência do%%% sistema. %%% Criação da função de FourierGFourier = @(w) a./((1i*w).^2 + b*(1i*w) + c);%%% Comparação do espectro de frequência do sinal, com a resposta em%%% frequência do sistemafigure(8)plot(frequencia, Y0);       % Fourier originalxlabel('Frequencia [Hz]');ylabel('Ganho em log10');title('Comparacao entre Fourier e Laplace');hold;plot(frequencia, 20*log10(abs(GFourier(2*pi*frequencia))))legend('Fourier', 'Laplace')grid;% Com a figure(8) é possível verificar que, tanto no espectro de frequências% do sinal original, quanto na resposta em frequência da função de% transferência, há um pico no gráfico por volta de 700 Hz. Esse pico% implica em uma ressonância do sistema, e é bastante explicitado pela% análise de Laplace do sinal.%%% Relacionando a resposta em frequência do sistema com os polos do mesmo,%%% nota-se que a parte imaginária (omega) de um dos polos, quando visto em%%% Heartz, equivale ao pico do sistema, ou seja, à ressonância.%%% O que confirma que toda a informação explicitada por Laplace, está%%% expressada pelos polos da função de transferência.polos = pole(Gs);ressonancia_hz = imag(polos(1))/(2*pi);  % aproximadamente 730 Hz%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%  d. s = sigma + j w --> G(s) --> visualizar o gráfico do ponto de vista de w. %%     Comparando com Fourier qual a conclusão? (1.0 ponto)%% %% %%%%  [sigma, jw] = meshgrid(-5000:10:1000);F = a./ (sqrt((sigma.^2-jw.^2+b*sigma+c).^2 + (2*sigma.*jw+b*jw).^2)+eps);% Vizualiação 3D da função de transferênciafigure(9)mesh(sigma, jw, F)xlabel('Sigma')ylabel('jw')zlabel('z')title('Plot 3D da Função de Transferência')grid%%% Dessa forma, observa-se mais uma vez a ressonância no gráfico, dado%%% pelos picos da figure(9), que equivale aos polos do sistema. E, como é%%% visto por Fourier, a ressonância de Laplace ocorre onde há a primeira%%% formante da vogal, observada em Fourier.%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% e. Gerar uma vogal artificial (sintese de voz) de 2 segundos %%    - o mais realista possível (1.0 ponto).%% %% %%%%  vogal_artificial = repmat(resposta_laplace, 10);tempo_artificial = linspace(0, 2, length(vogal_artificial));figure(10)plot(tempo_artificial, vogal_artificial, "linewidth", 2)xlabel('tempo (s)')ylabel('Amplitude')title('Vogal Artificial (Metalica)')%sound(vogal_artificial(:, 1))  % Para ouvir a vogal artificialfor k=1:length(vogal_artificial)  fator = 0.9 + (0.2)*rand(1);  vogal_artificial(k) = fator * vogal_artificial(k);endfigure(11);plot(tempo_artificial, vogal_artificial(:, 1), "linewidth", 2)xlabel('tempo (s)')ylabel('Amplitude')title('Vogal Artificial (com ruido)')%sound(vogal_artificial(:, 1))  % Para ouvir a vogal artificial ruidosa%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%  f. Um método automático para determinar o G(s). (2,0 pontos)%% %%  %%%%%%% Foi criada uma função chamada 'erro_minimo'. Ela recebe 3 parâmetros:%%% b, c, Vp, sendo b o fator que multiplica o s no denominador da função%%% de transferência, c o coeficiente linear do denominador da função de%%% transferência e Vp o sinal original% Plot do trecho escolhido para fazer laplaceTrecho_escolhido = Vp(t1:t2);Tempo_escolhido = t(t1:t2);figure(12);plot(Tempo_escolhido,Trecho_escolhido)xlabel('tempo em segundos')ylabel('Amplitude')title('Serie temporal (trecho escolhido para análise)')grid;% Encontrando os melhores candidatos a b e cN       = 1;                                % Numeradorb       = linspace(0.01,1,100);             % Atenuaçãoc       = linspace(0.01,1,100);             % Frequência%[b_bckup c_bckup erro_min] = erro_minimo(b, c, Vp, t1, t2);      %Descomentar para ver o funcionamento%fprintf("Valores encontrados para erro minimo:\n");%fprintf("\tb = %.2f\n", b_bckup);%fprintf("\tc = %.2f\n", c_bckup);%fprintf("\tErro = %.2f\n", erro_min);%D = [1 b_bckup c_bckup];                                         % Denominador%Valores encontrados: (Comentar esse bloco e descomentar o bloco acima para verificar a deteccao automatica)b = 0.13;c = 0.12;Erro = 5.73;fprintf("f):\n");fprintf("Tempo para achar o erro minimo: Elapsed time is 98.8782 seconds.\n");fprintf("Valores encontrados para erro minimo:\n");fprintf("\tb = %.2f\n", b);fprintf("\tc = %.2f\n", c);fprintf("\tErro = %.2f\n\n", Erro);D = [1 0.13 0.12];   Gs = tf(N, D);      % Função de transferêciafigure(13);impulse(Gs);        % Estimulando o sistema%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% g - Um circuito elétrico equivalente a vogal. (1.0 ponto) %% %%  VG -->  R -->  L -->  VG - série%%%%  VG // R // C - paralelofprintf("g):\n");fprintf("Valores encontrados para erro minimo no item a:\n");fprintf("\tb = 0.13\n", b);fprintf("\tc = 0.12\n", c);fprintf("Portanto: (G(s) = y1)\n");Gsfprintf("Do circuito em paralelo (Ig // R // C // L) tem-se:\n");fprintf("\tG(s) = (s/C)/(s^2 + s/RC + 1/LC)\n");fprintf("\t(1)  s/C = s --> C = 1F\n");fprintf("\t(2)  s/RC = 0.13s --> R ~ 7,69ohm\n");fprintf("\t(1)  1/LC = 0.12 --> L ~ 8,33H\n");